@model Business

@{
    ViewData["Title"] = "Register Business";
}

<div class="container">
    <div class="row justify-content-center">
        <div class="col-md-6">
            <div class="card">
                <div class="card-header text-white" style="background-color: #c197d2;">
                    <h4 class="mb-0">Business Registration</h4>
                </div>
                <div class="card-body">
                    <div class="text-center mb-3">
                        <p>Sign up using:</p>
                        <a href="#" class="btn btn-outline-primary mx-1">
                            <i class="fab fa-facebook-f"></i> Facebook
                        </a>
                        <a href="#" class="btn btn-outline-danger mx-1">
                            <i class="fab fa-instagram"></i> Instagram
                        </a>
                    </div>

                    <form asp-action="RegisterBusiness" id="business-form">
                        <div asp-validation-summary="ModelOnly" class="text-danger mb-3"></div>

                        <div class="form-group">
                            <label asp-for="UserName" class="control-label">Username</label>
                            <input asp-for="UserName" class="form-control" placeholder="Enter your business username" required />
                            <span asp-validation-for="UserName" class="text-danger"></span>
                        </div>

                        <div class="form-group">
                            <label asp-for="Name" class="control-label"></label>
                            <input asp-for="Name" class="form-control" placeholder="Enter business name" required />
                            <span asp-validation-for="Name" class="text-danger"></span>
                        </div>

                        <div class="form-group">
                            <label asp-for="Email" class="control-label"></label>
                            <input asp-for="Email" class="form-control" placeholder="Enter business email" required />
                            <span asp-validation-for="Email" class="text-danger"></span>
                        </div>

                        <div class="form-group">
                            <label asp-for="PhoneNumber" class="control-label">Phone Number</label>
                            <input asp-for="PhoneNumber" class="form-control" placeholder="Enter business phone number" required />
                            <span asp-validation-for="PhoneNumber" class="text-danger"></span>
                        </div>

                        <div class="form-group position-relative">
                            <label for="address-input" class="control-label">Street Address</label>
                            <input id="address-input" name="LocationService.Address" class="form-control" placeholder="Enter street address" oninput="getSuggestions(event)" required />
                            <span asp-validation-for="LocationService.Address" class="text-danger"></span>
                            <ul id="suggestion-list" class="list-group position-absolute" style="max-height: 200px; overflow-y: auto; display: none;"></ul>
                            <div id="loading-indicator" style="display: none;">Loading...</div> <!-- Loading indicator -->
                        </div>

                        <!-- Hidden fields to store other address components -->
                        <input type="hidden" asp-for="LocationService.Latitude" id="latitude" step="any" />
                        <input type="hidden" asp-for="LocationService.Longitude" id="longitude" step="any" />
                        <input type="hidden" asp-for="LocationService.City" id="city" />
                        <input type="hidden" asp-for="LocationService.PostalCode" id="postalCode" />
                        <input type="hidden" asp-for="LocationService.Country" id="country" />
                        <input type="hidden" asp-for="LocationService.Suburb" id="suburb" />


                        <div class="form-group custom-dropdown">
                            <label asp-for="BusinessCategory" class="control-label">Category</label>
                            <div class="custom-select-dropdown" onclick="toggleDropdown()">
                                <input type="text" id="category-display" class="form-control" placeholder="Select business category" required>
                                <input type="hidden" id="category-value" name="BusinessCategory" />
                                <i id="dropdown-arrow" class="fas fa-chevron-down"></i> <!-- Arrow icon -->
                            </div>
                            <ul id="category-options" class="list-group position-absolute" style="display: none; max-height: 200px; overflow-y: auto;">
                                <li class="list-group-item list-group-item-action" onclick="selectCategory('Salon')">Salon</li>
                                <li class="list-group-item list-group-item-action" onclick="selectCategory('Spa')">Spa</li>
                                <li class="list-group-item list-group-item-action" onclick="selectCategory('Nail Bar')">Nail Bar</li>
                                <li class="list-group-item list-group-item-action" onclick="selectCategory('Massage Therapy')">Massage Therapy</li>
                                <li class="list-group-item list-group-item-action" onclick="selectCategory('Barber Shop')">Barber Shop</li>
                                <li class="list-group-item list-group-item-action" onclick="selectCategory('Skincare Clinic')">Skincare Clinic</li>
                                <li class="list-group-item list-group-item-action" onclick="selectCategory('Yoga Studio')">Yoga Studio</li>
                                <li class="list-group-item list-group-item-action" onclick="selectCategory('Hair Removal Service')">Hair Removal Service</li>
                                <li class="list-group-item list-group-item-action" onclick="selectCategory('Fitness Studio')">Fitness Studio</li>
                                <li class="list-group-item list-group-item-action" onclick="selectCategory('Tanning Salon')">Tanning Salon</li>
                            </ul>
                            <span asp-validation-for="BusinessCategory" class="text-danger"></span>
                        </div>


                        <div class="form-group">
                            <label asp-for="Password" class="control-label"></label>
                            <input asp-for="Password" class="form-control" type="password" placeholder="Enter password" required />
                            <span asp-validation-for="Password" class="text-danger"></span>
                        </div>
                        <span style="display: block; height: 20px;"></span>
                        <div class="d-flex justify-content-between align-items-center">
                            <p class="mb-0">Already have an account? <a href="#" class="text-primary">Login</a></p>
                            <input type="submit" value="Register" class="btn btn-primary" />
                           
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @Html.Partial("_ValidationScriptsPartial")
}

<script>
    async function getSuggestions(event) {
        const address = event.target.value;
        const suggestionList = document.getElementById('suggestion-list');
        const loadingIndicator = document.getElementById('loading-indicator');

        suggestionList.innerHTML = '';
        suggestionList.style.display = 'none';

        if (address.length > 2) {
            loadingIndicator.style.display = 'block';
            try {
                const response = await fetch(`https://nominatim.openstreetmap.org/search?q=${encodeURIComponent(address)}&format=json&addressdetails=1&extratags=1&limit=5`);
                if (response.ok) {
                    const results = await response.json();
                    if (results.length > 0) {
                        results.forEach(result => {
                            const suggestionItem = document.createElement('li');
                            suggestionItem.textContent = result.display_name;
                            suggestionItem.onclick = () => selectAddress(result);
                            suggestionItem.classList.add('list-group-item', 'list-group-item-action');
                            suggestionList.appendChild(suggestionItem);
                        });
                        suggestionList.style.display = 'block';
                    }
                } else {
                    console.error('Error fetching suggestions.');
                }
            } catch (error) {
                console.error('Error:', error);
            } finally {
                loadingIndicator.style.display = 'none';
            }
        }
    }

    function selectAddress(result) {
        // Extract the street address and populate the address input
        const addressComponents = result.address;
        const streetAddress = addressComponents.road || addressComponents.street || ""; // Get street information
        document.getElementById('address-input').value = streetAddress; // Show only the street address

        // Update latitude and longitude fields
        document.getElementById('latitude').value = result.lat.replace('.', ',');
        document.getElementById('longitude').value = result.lon.replace('.', ',');

        // Extract and populate other location details
        document.getElementById('city').value = addressComponents.city || addressComponents.town || addressComponents.village || "";
        document.getElementById('postalCode').value = addressComponents.postcode || "";
        document.getElementById('country').value = addressComponents.country || "";
        document.getElementById('suburb').value = addressComponents.suburb || addressComponents.neighbourhood || ""; // Use 'neighbourhood' if 'suburb' is not available

        // Clear suggestions
        document.getElementById('suggestion-list').innerHTML = ''; // Clear suggestion items
        document.getElementById('suggestion-list').style.display = 'none'; // Hide the suggestion list

        // OPTIONAL: Focus back on the address input field (for better user experience)
        document.getElementById('address-input').focus(); // Focus on input after selection
    }



     function toggleDropdown() {
        const dropdown = document.getElementById("category-options");
        const arrow = document.getElementById("dropdown-arrow");
        dropdown.style.display = dropdown.style.display === "none" ? "block" : "none";
        arrow.classList.toggle("rotate"); // Add or remove the rotation class
    }

    function selectCategory(category) {
        document.getElementById("category-display").value = category;
        document.getElementById("category-value").value = category;
        document.getElementById("category-options").style.display = "none";
    }

    // Close dropdown if clicked outside
    document.addEventListener("click", function (event) {
        const dropdown = document.getElementById("category-options");
        const display = document.getElementById("category-display");
        if (!display.contains(event.target) && !dropdown.contains(event.target)) {
            dropdown.style.display = "none";
            document.getElementById("dropdown-arrow").classList.remove("rotate");
        }
    });

</script>

<style>
    body {
        background-color: #f8f9fa;
        font-family: Arial, sans-serif;
    }

    .card {
        border-radius: 10px;
        box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
    }

    .card-header {
        border-top-left-radius: 10px;
        border-top-right-radius: 10px;
    }

    .btn-outline-primary, .btn-outline-danger {
        width: 120px;
    }

    .list-group-item {
        cursor: pointer;
    }

        .list-group-item:hover {
            background-color: #f1f1f1;
        }

    #suggestion-list {
        z-index: 1000;
        max-height: 200px;
        overflow-y: auto;
        display: none;
        position: absolute; /* Ensure this is present */
        background-color: white; /* Ensure it's visible */
        border: 1px solid #ccc; /* Optional: border for better visibility */
        width: calc(100% - 1rem); /* Match the input width and adjust for padding */
    }

    #loading-indicator {
        display: none; /* Initially hidden */
        position: absolute; /* Positioning the loading indicator */
        background-color: white; /* Background for visibility */
        z-index: 1001; /* Above other elements */
        padding: 5px; /* Padding for aesthetics */
        border-radius: 5px; /* Rounded corners */
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2); /* Shadow for depth */
    }

     .custom-select-dropdown {
        position: relative;
        cursor: pointer;
    }

    #category-options {
        z-index: 1000;
        background-color: white;
        border: 1px solid #ccc;
        width: 100%;
        padding: 0;
        list-style: none;
    }

    .list-group-item:hover {
        background-color: #f1f1f1;
    }

    #dropdown-arrow {
        position: absolute;
        right: 10px;
        top: 50%;
        transform: translateY(-50%);
        transition: transform 0.3s ease; /* Smooth rotation */
    }

    .rotate {
        transform: translateY(-50%) rotate(180deg); /* Rotate when dropdown is open */
    }

    .btn-primary {
        background-color: #613659; /* Mauve color */
        border-color: #613659 /* Optional: match border color */
    }

        .btn-primary:hover {
            background-color: #613659; /* Slightly darker mauve on hover */
            border-color: #613659;
        }

    .btn-register {
        background-color: #5A9; /* Match color with header */
        color: #fff;
        padding: 0.8rem 1.5rem;
        border-radius: 5px;
        transition: background-color 0.3s ease, box-shadow 0.3s ease;
    }

        .btn-register:hover {
            background-color: #488; /* Slightly darker shade on hover */
            box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.2);
        }
</style>

<!-- Font Awesome for icons -->
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" />
