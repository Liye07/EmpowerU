@model Business

@{
    ViewData["Title"] = "Edit Business Profile";
}

<div class="container-fluid">
    <div class="row">
        <!-- Main Sidebar Section (Left) -->
        <div class="col-lg-3 col-md-4 bg-primary text-white vh-100 p-0">
            <div class="d-flex flex-column align-items-center py-4">
                <!-- Sidebar Header with Logo -->
                <img src="https://static.vecteezy.com/system/resources/previews/024/284/257/original/beauty-salon-logo-design-free-vector.jpg" alt="Logo" class="rounded-circle mb-3" width="70" height="70">
                <h5>@Model.Name</h5>
            </div>
            <ul class="nav flex-column px-3" id="mainSidebar">
                <li class="nav-item">
                    <a class="nav-link text-white" href="#" data-target="dashboard">
                        <i class="fas fa-tachometer-alt"></i> Dashboard
                    </a>
                </li>
                <li class="nav-item">
                    <a class="nav-link text-white active" href="#" data-target="profile">
                        <i class="fas fa-user"></i> Profile
                    </a>
                </li>
                <li class="nav-item">
                    <a class="nav-link text-white" href="#" data-target="services">
                        <i class="fas fa-briefcase"></i> Services
                    </a>
                </li>
                <li class="nav-item">
                    <a class="nav-link text-white" href="#" data-target="settings">
                        <i class="fas fa-cog"></i> Settings
                    </a>
                </li>
            </ul>
        </div>

        <!-- Secondary Sidebar Section (Connected to Main Sidebar) -->
        <div class="col-lg-2 col-md-4 bg-light vh-100 p-0">
            <div class="d-flex flex-column align-items-center py-4">
                <h5 class="mb-4">Additional Settings</h5>
            </div>
            <ul class="nav flex-column px-3" id="secondarySidebar">
                <!-- Dynamic content will be shown here based on the main sidebar selection -->
            </ul>
        </div>

        <!-- Main Content Section (Right) -->
        <div class="col-lg-7 col-md-8 py-5">
            <div class="container">
                <h4 class="mb-4">Edit Profile</h4>

                <div class="row">
                    <!-- Profile Picture and Form -->
                    <div class="col-md-12">
                        <div class="card shadow-sm border-1">
                            <div class="card-body">
                                <!-- Profile Picture Section -->
                                <div class="text-center mb-4">
                                    <img src="https://static.vecteezy.com/system/resources/previews/024/284/257/original/beauty-salon-logo-design-free-vector.jpg" alt="Profile Picture" class="rounded-circle mb-3" width="100" height="100">
                                    <br />
                                    <button type="button" class="btn btn-outline-primary mt-2">Change picture</button>
                                    <p class="mt-2 text-muted">
                                        <small>Acceptable size: 512x512 pixels. Max file size: 2MB. Formats: JPEG, PNG.</small>
                                    </p>
                                </div>

                                <!-- Account Information Form -->
                                <form asp-action="EditBusinessProfile" method="post" class="form-horizontal">
                                    <div class="form-group row mb-3">
                                        <label for="Name" class="col-sm-3 col-form-label">Name</label>
                                        <div class="col-sm-9">
                                            <input type="text" asp-for="Name" class="form-control" placeholder="Enter business name" />
                                            <span asp-validation-for="Name" class="text-danger"></span>
                                        </div>
                                    </div>

                                    <div class="form-group row mb-3">
                                        <label for="Email" class="col-sm-3 col-form-label">Email</label>
                                        <div class="col-sm-9">
                                            <input type="email" asp-for="Email" class="form-control" placeholder="Enter business email" />
                                            <span asp-validation-for="Email" class="text-danger"></span>
                                        </div>
                                    </div>

                                    <div class="form-group row mb-3">
                                        <label for="PhoneNumber" class="col-sm-3 col-form-label">Phone Number</label>
                                        <div class="col-sm-9">
                                            <input type="tel" asp-for="PhoneNumber" class="form-control" placeholder="Enter phone number" />
                                            <span asp-validation-for="PhoneNumber" class="text-danger"></span>
                                        </div>
                                    </div>

                                    <div class="form-group row mb-3">
                                        <label for="Description" class="col-sm-3 col-form-label">Description</label>
                                        <div class="col-sm-9">
                                            <textarea asp-for="Description" class="form-control" placeholder="Describe your business"></textarea>
                                            <span asp-validation-for="Description" class="text-danger"></span>
                                        </div>
                                    </div>

                                    <div class="form-group row mb-3">
                                        <label asp-for="BusinessCategory" class="col-sm-3 col-form-label">Category</label>
                                        <div class="col-sm-9 position-relative">
                                            <div class="custom-select-dropdown" onclick="toggleDropdown()">
                                                <input type="text" id="category-display" class="form-control" placeholder="Select business category" required value="@Model.BusinessCategory" />
                                                <input type="hidden" id="category-value" name="BusinessCategory" value="@Model.BusinessCategory" />
                                                <i id="dropdown-arrow" class="fas fa-chevron-down"></i> <!-- Arrow icon -->
                                            </div>

                                            <ul id="category-options" class="list-group position-absolute w-100" style="display: none; max-height: 200px; overflow-y: auto; z-index: 1000;">
                                                <li class="list-group-item list-group-item-action" onclick="selectCategory('Salon')">Salon</li>
                                                <li class="list-group-item list-group-item-action" onclick="selectCategory('Spa')">Spa</li>
                                                <li class="list-group-item list-group-item-action" onclick="selectCategory('Nail Bar')">Nail Bar</li>
                                                <li class="list-group-item list-group-item-action" onclick="selectCategory('Massage Therapy')">Massage Therapy</li>
                                                <li class="list-group-item list-group-item-action" onclick="selectCategory('Barber Shop')">Barber Shop</li>
                                                <li class="list-group-item list-group-item-action" onclick="selectCategory('Skincare Clinic')">Skincare Clinic</li>
                                                <li class="list-group-item list-group-item-action" onclick="selectCategory('Yoga Studio')">Yoga Studio</li>
                                                <li class="list-group-item list-group-item-action" onclick="selectCategory('Hair Removal Service')">Hair Removal Service</li>
                                                <li class="list-group-item list-group-item-action" onclick="selectCategory('Fitness Studio')">Fitness Studio</li>
                                                <li class="list-group-item list-group-item-action" onclick="selectCategory('Tanning Salon')">Tanning Salon</li>
                                            </ul>

                                            <span asp-validation-for="BusinessCategory" class="text-danger"></span>
                                        </div>
                                    </div>



                                    <div class="form-group row mb-3">
                                        <label for="address-input" class="col-sm-3 col-form-label">Street Address</label>
                                        <div class="col-sm-9 position-relative">
                                            <!-- Make parent position relative -->
                                            <input type="text" asp-for="LocationService.Address" id="address-input" class="form-control" placeholder="Enter business address" oninput="getSuggestions(event)" required />
                                            <span asp-validation-for="LocationService.Address" class="text-danger"></span>
                                            <ul id="suggestion-list" class="list-group position-absolute" style="max-height: 200px; overflow-y: auto; display: none;"></ul>
                                            <div id="loading-indicator" style="display: none;">Loading...</div> <!-- Loading indicator -->
                                        </div>
                                    </div>


                                    <div class="form-group row mb-3">
                                        <label for="Suburb" class="col-sm-3 col-form-label">Suburb</label>
                                        <div class="col-sm-9">
                                            <input type="text" asp-for="LocationService.Suburb" id="suburb" class="form-control" readonly />
                                        </div>
                                    </div>
                                    <div class="form-group row mb-3">
                                        <label for="City" class="col-sm-3 col-form-label">City</label>
                                        <div class="col-sm-9">
                                            <input type="text" asp-for="LocationService.City" id="city" class="form-control" readonly />
                                        </div>
                                    </div>
                                    <div class="form-group row mb-3">
                                        <label for="PostalCode" class="col-sm-3 col-form-label">Postal Code</label>
                                        <div class="col-sm-9">
                                            <input type="text" asp-for="LocationService.PostalCode" id="postalCode" class="form-control" readonly />
                                        </div>
                                    </div>
                                    <div class="form-group row mb-3">
                                        <label for="Country" class="col-sm-3 col-form-label">Country</label>
                                        <div class="col-sm-9">
                                            <input type="text" asp-for="LocationService.Country" id="country" class="form-control" readonly />
                                        </div>
                                    </div>


                                    <input type="hidden" asp-for="LocationService.Latitude" id="latitude" step="any" />
                                    <input type="hidden" asp-for="LocationService.Longitude" id="longitude" step="any" />

                                    <div class="row">
                                        <div class="col-sm-9 offset-sm-3">
                                            <button type="submit" class="btn btn-primary">Save Changes</button>
                                        </div>
                                    </div>
                                </form>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

    </div>
</div>

@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/js/all.min.js" crossorigin="anonymous"></script>
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

}


<script>
    const mainSidebar = document.getElementById('mainSidebar');
    const secondarySidebar = document.getElementById('secondarySidebar');

    // Sidebar options based on main sidebar selection
    const options = {
        profile: [
            { text: 'Business Info', icon: 'fas fa-info-circle' },
            { text: 'Notifications', icon: 'fas fa-bell' },
            { text: 'Privacy', icon: 'fas fa-lock' }
        ],
        services: [
            { text: 'Service Info', icon: 'fas fa-briefcase' },
            { text: 'Pricing', icon: 'fas fa-dollar-sign' }
        ],
        settings: [
            { text: 'General Settings', icon: 'fas fa-cog' },
            { text: 'Account Security', icon: 'fas fa-shield-alt' }
        ],
        dashboard: [
            { text: 'Overview', icon: 'fas fa-chart-line' }
        ]
    };

    // Function to update active link in main sidebar
    function updateMainActiveLink(targetLink) {
        const allLinks = mainSidebar.querySelectorAll('a.nav-link');
        allLinks.forEach(link => link.classList.remove('active'));
        targetLink.classList.add('active');
    }

    // Function to populate secondary sidebar
    function updateSecondarySidebar(target) {
        secondarySidebar.innerHTML = ''; // Clear existing links

        if (options[target]) {
            options[target].forEach(option => {
                const li = document.createElement('li');
                li.classList.add('nav-item');
                li.innerHTML = `<a class="nav-link text-dark" href="#"><i class="${option.icon}"></i> ${option.text}</a>`;
                secondarySidebar.appendChild(li);
            });
        }

        // Set the first link as active in secondary sidebar by default
        const firstLink = secondarySidebar.querySelector('a.nav-link');
        if (firstLink) {
            firstLink.classList.add('active');
        }
    }

    // Event listener for main sidebar link clicks
    mainSidebar.addEventListener('click', (e) => {
        if (e.target.tagName === 'A') {
            e.preventDefault();

            const targetLink = e.target;
            const target = targetLink.getAttribute('data-target');

            // Update active link in main sidebar
            updateMainActiveLink(targetLink);

            // Populate secondary sidebar
            updateSecondarySidebar(target);
        }
    });

    // Event listener for secondary sidebar link clicks
    secondarySidebar.addEventListener('click', (e) => {
        if (e.target.tagName === 'A') {
            e.preventDefault();

            const allSecondaryLinks = secondarySidebar.querySelectorAll('a.nav-link');
            allSecondaryLinks.forEach(link => link.classList.remove('active'));
            e.target.classList.add('active');
        }
    });


    async function getSuggestions(event) {
        const address = event.target.value;
        const suggestionList = document.getElementById('suggestion-list');
        const loadingIndicator = document.getElementById('loading-indicator');

        suggestionList.innerHTML = '';
        suggestionList.style.display = 'none';

        if (address.length > 2) {
            loadingIndicator.style.display = 'block';
            try {
                const response = await fetch(`https://nominatim.openstreetmap.org/search?q=${encodeURIComponent(address)}&format=json&addressdetails=1&extratags=1&limit=5`);
                if (response.ok) {
                    const results = await response.json();
                    if (results.length > 0) {
                        results.forEach(result => {
                            const suggestionItem = document.createElement('li');
                            suggestionItem.textContent = result.display_name;
                            suggestionItem.onclick = () => selectAddress(result); // Set up click handler
                            suggestionItem.classList.add('list-group-item', 'list-group-item-action');
                            suggestionList.appendChild(suggestionItem);
                        });
                        suggestionList.style.display = 'block';
                    }
                } else {
                    console.error('Error fetching suggestions.');
                }
            } catch (error) {
                console.error('Error:', error);
            } finally {
                loadingIndicator.style.display = 'none';
            }
        }
    }
    function selectAddress(result) {
        const addressComponents = result.address;

        // Update the street address
        const addressInput = document.getElementById('address-input');
        if (addressInput) addressInput.value = addressComponents.road || addressComponents.street || "";

        // Update latitude and longitude with console logging
        const latitude = document.getElementById('latitude');
        const longitude = document.getElementById('longitude');

        if (latitude) {
            const formattedLat = result.lat.replace('.', ',');
            console.log("Formatted Latitude:", formattedLat); // Log formatted latitude
            latitude.value = formattedLat;
            latitude.dispatchEvent(new Event('input')); // Trigger update event
        }
        if (longitude) {
            const formattedLon = result.lon.replace('.', ',');
            console.log("Formatted Longitude:", formattedLon); // Log formatted longitude
            longitude.value = formattedLon;
            longitude.dispatchEvent(new Event('input')); // Trigger update event
        }

        // Update city, postal code, country, and suburb
        document.getElementById('city').value = addressComponents.city || addressComponents.town || addressComponents.village || "";
        document.getElementById('postalCode').value = addressComponents.postcode || "";
        document.getElementById('country').value = addressComponents.country || "";
        document.getElementById('suburb').value = addressComponents.suburb || addressComponents.neighbourhood || "";

        // Clear suggestions list
        const suggestionList = document.getElementById('suggestion-list');
        if (suggestionList) {
            suggestionList.innerHTML = '';
            suggestionList.style.display = 'none';
        }

        // OPTIONAL: Focus back on the address input field
        if (addressInput) addressInput.focus();
    }




    function toggleDropdown() {
        const dropdown = document.getElementById("category-options");
        const arrow = document.getElementById("dropdown-arrow");
        dropdown.style.display = dropdown.style.display === "none" ? "block" : "none";
        arrow.classList.toggle("rotate"); // Add or remove the rotation class
    }

    function selectCategory(category) {
        document.getElementById("category-display").value = category;
        document.getElementById("category-value").value = category;
        document.getElementById("category-options").style.display = "none";
    }

    // Close dropdown if clicked outside
    document.addEventListener("click", function (event) {
        const dropdown = document.getElementById("category-options");
        const display = document.getElementById("category-display");
        if (!display.contains(event.target) && !dropdown.contains(event.target)) {
            dropdown.style.display = "none";
            document.getElementById("dropdown-arrow").classList.remove("rotate");
        }
    });

</script>

<style>
    .list-group-item {
        cursor: pointer;
    }

        .list-group-item:hover {
            background-color: #f1f1f1;
        }

    #suggestion-list {
        z-index: 1000;
        max-height: 200px;
        overflow-y: auto;
        display: none;
        position: absolute; /* Ensure this is present */
        background-color: white; /* Ensure it's visible */
        border: 1px solid #ccc; /* Optional: border for better visibility */
        width: calc(100% - 1rem); /* Match the input width and adjust for padding */
    }

    #loading-indicator {
        display: none; /* Initially hidden */
        position: absolute; /* Positioning the loading indicator */
        background-color: white; /* Background for visibility */
        z-index: 1001; /* Above other elements */
        padding: 5px; /* Padding for aesthetics */
        border-radius: 5px; /* Rounded corners */
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2); /* Shadow for depth */
    }

         .custom-select-dropdown {
        position: relative;
        cursor: pointer;
    }

    #category-options {
        z-index: 1000;
        background-color: white;
        border: 1px solid #ccc;
        width: 100%;
        padding: 0;
        list-style: none;
    }

    .list-group-item:hover {
        background-color: #f1f1f1;
    }

    #dropdown-arrow {
        position: absolute;
        right: 10px;
        top: 50%;
        transform: translateY(-50%);
        transition: transform 0.3s ease; /* Smooth rotation */
    }

    .rotate {
        transform: translateY(-50%) rotate(180deg); /* Rotate when dropdown is open */
    }

</style>


<!-- Font Awesome for icons -->
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" />
