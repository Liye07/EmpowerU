@model Business

@{
    ViewBag.Title = "Business Dashboard";
    Layout = "~/Views/Shared/_Layout.cshtml"; // Assuming you're using a shared layout
    var todayAppointments = ViewBag.TodayAppointments as List<dynamic>;
    var notifications = ViewBag.Notifications as List<Notification>;
    var unreadMessages = ViewBag.UnreadMessages as List<Message>;
}

<div class="dashboard-container d-flex">

    @await Html.PartialAsync("_Sidebar", Model)

    <!-- Main Content Section -->
    <div class="main-content col-lg-9 col-md-8 py-5 ms-4">
        <!-- Added ms-4 for spacing -->
        <!-- Header -->
        <div class="header d-flex justify-content-between align-items-center mb-4">
            <h1 style="font-size: 40px;"><strong>Dashboard</strong></h1>
            <div class="header-actions">
                <!-- Notification Icon with Link -->
                <button class="action-btn" onclick="window.location.href='/Notifications/Index/@Model.Id'">
                    <i class="fa fa-bell"></i>
                    <!-- Show notification count if there are any -->
                    @if (notifications != null && notifications.Any())
                    {
                        <span class="notification-count">@notifications.Count</span>
                    }
                </button>

                <button class="action-btn" onclick="window.location.href='/Messages/Index/@Model.Id'">
                    <i class="fa fa-envelope"></i>
                    <!-- Show unread message count if there are any -->
                    @if (unreadMessages != null && unreadMessages.Any())
                    {
                        <span class="notification-count">@unreadMessages.Count</span>
                    }
                </button>
            </div>
        </div>

        <!-- Statistics Cards -->
        <div class="stats-cards d-flex justify-content-between mb-4">
            <div class="balance-card shadow p-3">
                <h3 style="font-size: 20px;">Your Balance</h3>
                <p>R@(ViewBag.TotalIncome.ToString("N2"))</p> 
            </div>
            <div class="stat-card flex-fill shadow p-3">
                <h3 style="font-size: 20px;">@ViewBag.CurrentMonth's Income</h3>
                <p>R@(ViewBag.MonthlyIncome.ToString("N2"))</p>
            </div>
            <div class="stat-card flex-fill shadow p-3">
                <h3 style="font-size: 20px;">Total No. of Appointments Booked</h3> <!-- Adjusted font size -->
                <p>@ViewBag.TotalAppointments</p>  <!-- Dynamic total appointments -->
            </div>
        </div>

        <!-- Content Section with Pie Chart and Today's Appointments -->
        <div class="content-section d-flex flex-wrap">
            <div class="left-column flex-fill me-4 mb-4" style="max-width: 400px;">
                <!-- Pie Chart Section -->
                <div class="marketplace-card p-3 mb-4 shadow">
                    <h3 style="font-size: 20px;">Appointments by Service Category</h3>
                    <canvas id="empoweruPieChart" style="max-width: 100%; height: auto;"></canvas>
                </div>
            </div>
            
            <!-- Today's Appointments Section -->
            <div class="today-appointments flex-fill p-3 mb-4 shadow" style="cursor: pointer;" onclick="window.location.href='/Businesses/ManageAppointments/@Model.Id'">
                <h3 style="font-size: 20px;" >Today's Appointments</h3>
                <div class="table-responsive">
                    <table class="table table-bordered">
                        <thead>
                            <tr>
                                <th>Name</th>
                                <th>Time</th>
                            </tr>
                        </thead>
                        <tbody>
                            @if (ViewBag.TodayAppointments != null && ((List<object>)ViewBag.TodayAppointments).Any())
                            {
                                int count = 0; // Counter to limit to 5 appointments
                                foreach (var appointment in (List<object>)ViewBag.TodayAppointments)
                                {
                                    if (count++ >= 5) break; // Limit to 5 appointments
                                    {
                                        // Cast to dynamic to access properties
                                        var app = (dynamic)appointment;
                                        <tr>
                                            <td>@app.Name</td>
                                            <td>@app.DateTime.ToString("hh:mm tt")</td>
                                        </tr>
                                    }

                                }
                            }
                            else
                            {
                                <tr>
                                    <td colspan="2" class="text-center" style="font-size: 12px;">No appointments scheduled for today.</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>

            <div class="right-column flex-fill mb-4">
                <div class="stat-card flex-fill shadow p-3">
                    <h3 style="font-size: 20px;"> Total No. of Customers</h3> <!-- Adjusted font size -->
                    <p>@ViewBag.TotalCustomers</p>  <!-- Dynamic total customers -->
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/js/all.min.js" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        // Initialize your pie chart here using Chart.js
        const ctx = document.getElementById('empoweruPieChart').getContext('2d');
        const empoweruPieChart = new Chart(ctx, {
            type: 'pie',
            data: {
                labels: ['Label1', 'Label2', 'Label3'],  // Replace with your data labels
                datasets: [{
                    data: [10, 20, 30],  // Replace with your data values
                    backgroundColor: ['#FF6384', '#36A2EB', '#FFCE56'],
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false, // Allow it to resize
            }
        });
    </script>
}

<style>
    /* Custom Styles for the Dashboard */
    .dashboard-container {
        background: #f8f9fa;
        height: auto; /* Ensure it covers the full height */
    }

    .main-content {
        background: #f8f9fa; /* Ensure the grey background covers the whole content */
        padding: 20px;
        min-height: 100vh; /* Ensure it covers the full viewport height */
    }

    .content-section {
        display: flex;
        gap: 20px; /* Adds space between the two blocks */
    }

    .left-column,
    .right-column,
    .today-appointments {
        flex-basis: 20%; /* Ensures the blocks take up appropriate width */
        min-width: 20%;
    }

    .stats-cards {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
        gap: 1rem;
    }

    .stat-card {
        background: #fff;
        border-radius: 8px;
        padding: 20px;
        text-align: center;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        transition: box-shadow 0.3s;
    }

    .stat-card:hover {
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
    }

    .marketplace-card,
    .today-appointments,
    .balance-card {
        background: #fff;
        border-radius: 8px;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    }

    .today-appointments table {
        width: 100%;
        border-collapse: collapse;
    }

    .today-appointments th,
    .today-appointments td {
        padding: 10px;
        text-align: center;
    }

    .today-appointments th {
        background-color: #007bff;
        color: white;
    }

    .today-appointments td {
        border: 1px solid #ddd;
    }

    .header {
        margin-bottom: 20px;
    }

    .header-actions .action-btn {
        background: transparent;
        border: none;
        color: #000;
        cursor: pointer;
        margin-left: 10px;
    }

    .header-actions .action-btn:hover {
        color: #007bff;
    }

    .balance-card {
        text-align: center;
    }

    .balance-card button {
        margin-top: 10px;
    }

    .marketplace-card {
        position: relative; /* Add this */
        overflow: hidden; /* Add this to contain the chart */
        max-height: 500px; /* Set a maximum height */
        text-align: center;
    }

    .action-btn {
        position: relative;
        border: none;
        background: none;
        cursor: pointer;
        font-size: 18px;
    }

    .notification-count {
        position: absolute;
        top: -5px; /* Adjust as needed */
        right: -5px; /* Adjust as needed */
        background-color: red;
        color: white;
        border-radius: 50%;
        padding: 2px 6px;
        font-size: 12px;
    }

</style>
