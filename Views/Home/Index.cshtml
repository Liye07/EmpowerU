@{
    ViewData["Title"] = "Home Page";
}

<div class="text-center">
    <span style="display: block; height: 20px;"></span>
    <h1 class="text-left slide-in" style="color: white; font-weight: bold;">Book Your Next Appointment!</h1>

</div>

<div class="container mt-4">
    <div class="row justify-content-start">
        <div class="col-md-8">

            <div class="form-group position-relative">
                <label style="color:white" for="address-input" class="control-label">Search for businesses by location</label>
                <input id="address-input" name="LocationService.Address" class="form-control" placeholder="Enter street address" oninput="getSuggestions(event)" required />

                <ul id="suggestion-list" class="list-group position-absolute" style="max-height: 200px; overflow-y: auto; display: none;"></ul>
                <div id="loading-indicator" style="display: none;">Loading...</div> <!-- Loading indicator -->
            </div>

            <!-- Hidden fields to store other address components -->
            <input type="hidden" id="latitude" step="any" />
            <input type="hidden" id="longitude" step="any" />
            <input type="hidden" id="city" />
            <input type="hidden" id="postalCode" />
            <input type="hidden" id="country" />
            <input type="hidden" id="suburb" />

        </div>
    </div>
</div>


<!-- Large Text for Services -->
<h2 class="text-left" style="color: white; font-weight: bold; ">Our Services:</h2>

<!-- Advertisement Section -->
<div>
    <div>
        <div>
            <div class="row mt-4">
                @foreach (var business in Model) // Loop through each business
                {
                    <div class="col-md-4 mb-4">
                        <div class="card">
                            <img src="@business.ProfilePicture" class="card-img-top" alt="@business.Description"> <!-- You need an ImageUrl property -->
                            <div class="card-body">
                                <h5 class="card-title">@business.Description</h5> <!-- Adjust based on your model -->
                                <p class="card-text">Category: @business.BusinessCategory</p> <!-- Display BusinessCategory -->
                                <h5>Rating</h5>
                                <p>
                                    @for (var i = 1; i <= 5; i++)
                                    {
                                        if (i <= @business.Rating)
                                        {
                                            <span class="fas fa-star" style="color: #FFD700;"></span> <!-- Filled star -->
                                        }
                                        else
                                        {
                                            <span class="far fa-star" style="color: #D3D3D3;"></span> <!-- Empty star -->
                                        }
                                    }


                            </div>
                            <a href="@Url.Action("Details", "Businesses", new { id = business.Id })" class="btn btn-primary">View Details</a> <!-- Adjust Action and Controller based on your application structure -->
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

<!-- Footer Section -->
@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/js/all.min.js"></script>


    <script>
        async function getSuggestions(event) {
            const address = event.target.value;
            const suggestionList = document.getElementById('suggestion-list');
            const loadingIndicator = document.getElementById('loading-indicator');

            suggestionList.innerHTML = '';
            suggestionList.style.display = 'none';

            if (address.length > 2) {
                loadingIndicator.style.display = 'block';
                try {
                    const response = await fetch(`https://nominatim.openstreetmap.org/search?q=${encodeURIComponent(address)}&format=json&addressdetails=1&extratags=1&limit=5`);
                    if (response.ok) {
                        const results = await response.json();
                        if (results.length > 0) {
                            results.forEach(result => {
                                const suggestionItem = document.createElement('li');
                                suggestionItem.textContent = result.display_name;
                                suggestionItem.onclick = () => selectAddress(result);
                                suggestionItem.classList.add('list-group-item', 'list-group-item-action');
                                suggestionList.appendChild(suggestionItem);
                            });
                            suggestionList.style.display = 'block';
                        }
                    } else {
                        console.error('Error fetching suggestions.');
                    }
                } catch (error) {
                    console.error('Error:', error);
                } finally {
                    loadingIndicator.style.display = 'none';
                }
            }
        }
        function selectAddress(result) {
            const addressComponents = result.address;
            const streetAddress = addressComponents.road || addressComponents.street || "";
            document.getElementById('address-input').value = streetAddress;

            // Update hidden fields
            document.getElementById('latitude').value = result.lat;
            document.getElementById('longitude').value = result.lon;
            document.getElementById('city').value = addressComponents.city || addressComponents.town || addressComponents.village || "";
            document.getElementById('postalCode').value = addressComponents.postcode || "";
            document.getElementById('country').value = addressComponents.country || "";
            document.getElementById('suburb').value = addressComponents.suburb || addressComponents.neighbourhood || "";

            // Redirect with all necessary parameters
            window.location.href = `/Consumers/Search?lat=${result.lat}&lon=${result.lon}&address=${encodeURIComponent(result.display_name)}`;
        }


    </script>



}

<style>




    body {
        background-image: url(@Url.Content("~/images/pexels-tombrand-1891234.jpg"));
        background-size: cover;
        background-repeat: no-repeat;
        background-attachment: fixed;
    }


    body {
        background-color: #f8f9fa;
        font-family: Arial, sans-serif;
    }

    .btn-outline-primary {
        width: 120px;
    }

    .card {
        border-radius: 10px;
        box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
    }

    .card-title {
        font-size: 1.5rem;
    }

    footer {
        background-color: #f8f9fa;
    }

    .fa-star {
        font-size: 16px;
    }

    .fa-star {
        font-size: 20px;
    }

    .card-img-top {
        width: 100px; 
        height: auto; 
        object-fit: cover; /* Ensures image scales proportionally */
        margin: auto;
    }

   
    .list-group-item {
        cursor: pointer;
    }

        .list-group-item:hover {
            background-color: #f1f1f1;
        }

    #suggestion-list {
        z-index: 1000;
        max-height: 200px;
        overflow-y: auto;
        display: none;
        position: absolute; /* Ensure this is present */
        background-color: white; /* Ensure it's visible */
        border: 1px solid #ccc; /* Optional: border for better visibility */
        width: calc(100% - 1rem); /* Match the input width and adjust for padding */
    }

    #loading-indicator {
        display: none; /* Initially hidden */
        position: absolute; /* Positioning the loading indicator */
        background-color: white; /* Background for visibility */
        z-index: 1001; /* Above other elements */
        padding: 5px; /* Padding for aesthetics */
        border-radius: 5px; /* Rounded corners */
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2); /* Shadow for depth */
    }

    .custom-select-dropdown {
        position: relative;
        cursor: pointer;
    }

   

    /* Add Line Between Search and Services */
    .container.mt-4::after {
        content: "";
        display: block;
        width: 100%;
        border-top: 2px solid #ccc;
        margin: 20px 0;
    }

    /* Update 'View Details' Button Background Color */
    .btn-primary {
        background-color: #613659 !important;
        border-color: #613659 !important;
    }

    /* Remove Light Background Color from Footer */
    footer {
        background-color: transparent;
        display: none;
    }

    h1, h2 {
        margin-bottom: 20px;
    }

    .container.mt-4 {
        padding-top: 20px;
    }

    .btn-primary {
        color: #ffffff !important;
    }

    .navbar-brand {
        display: none;
    }


</style>

<!-- Font Awesome for icons -->
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css" />
