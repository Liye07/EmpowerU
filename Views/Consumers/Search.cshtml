@{
    ViewData["Title"] = "Search";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Search Businesses</title>
    <style>
        /* Style adjustments for layout */
        .container {
            display: flex;
            width: 100%;
        }

        .sidebar {
            width: 30%;
            padding: 10px;
            border-right: 1px solid #ccc;
            max-height: 500px;
            overflow-y: auto;
            background-color: #f1f1f1;
        }

        .map {
            width: 70%;
            padding: 10px;
            position: relative;
            height: 400px; /* Explicitly set height */
        }

        .business-card img {
            width: 100px;
            height: 100px;
            object-fit: cover;
        }

        /* Leaflet map styling */
        #map {
            width: 100%;
            height: 100%; /* Make map fill the container */
            border: 1px solid #ccc;
            border-radius: 5px;
        }
    </style>
    <link rel="stylesheet" href="https://unpkg.com/leaflet/dist/leaflet.css" />
</head>
<body>
    <div class="header">
        <div class="search-bar">
            <h1>EmpowerU</h1>
            <input type="text" id="searchInput" placeholder="Enter business or location">
        </div>
    </div>

    <div class="container">
        <!-- Sidebar with business results -->
        <div class="sidebar">
            <h6>Search results: Businesses in <span id="locationLabel">[Specified location]</span></h6>

            @foreach (var business in Model)
            {
                <div class="business-card">
                    <img src="data:image/png;base64,@(Convert.ToBase64String(business.ProfilePicture ?? new byte[0]))" alt="Logo">
                    <div class="business-details">
                        <h5>@business.Name</h5>
                        <p>@business.Description</p>
                        <p>Category: @business.BusinessCategory</p>
                        <p>Rating: @business.Rating</p>
                    </div>
                </div>
            }
        </div>

        <!-- Map section positioned on the right side -->
        <div class="map">
            <div id="map"></div>
        </div>
    </div>

    <script src="https://unpkg.com/leaflet/dist/leaflet.js"></script>
    <script>

        const map = L.map('map').setView([0, 0], 2); // Set initial view (latitude, longitude, zoom level)

        // Add OpenStreetMap tile layer
        L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
            maxZoom: 19,
            attribution: '© OpenStreetMap contributors'
        }).addTo(map);

        // Function to add markers to the map
        function addMarker(lat, lng, name) {
            const marker = L.marker([lat, lng]).addTo(map);
            marker.bindPopup(`<b>${name}</b>`).openPopup();
        }

        document.getElementById("searchInput").addEventListener("input", function () {
            const searchTerm = this.value;
            fetch(`@Url.Action("Search", "Consumer")?searchTerm=${searchTerm}`)
                .then(response => response.json())
                .then(data => {
                    // Clear previous results
                    const businessResults = document.querySelector(".sidebar");
                    businessResults.innerHTML = '';

                    // Clear existing markers
                    map.eachLayer(function (layer) {
                        if (layer instanceof L.Marker) {
                            map.removeLayer(layer);
                        }
                    });

                    // Update the location label if you have a specific location
                    document.getElementById("locationLabel").textContent = "your desired location"; // Update with your logic

                    // Populate results and add markers to the map
                    data.forEach(business => {
                        const card = document.createElement("div");
                        card.className = "business-card";
                        card.innerHTML = `
                                            <img src="data:image/png;base64,${business.ProfilePicture}" alt="Logo">
                                            <div class="business-details">
                                                <h5>${business.Name}</h5>
                                                <p>${business.Description}</p>
                                                <p>Category: ${business.BusinessCategory}</p>
                                                <p>Rating: ${business.Rating}</p>
                                            </div>
                                        `;
                        businessResults.appendChild(card);

                        // Add marker for each business (update property names accordingly)
                        addMarker(business.Latitude, business.Longitude, business.Name);
                    });

                    // Center map based on the first business (if any)
                    if (data.length > 0) {
                        map.setView([data[0].Latitude, data[0].Longitude], 12); // Adjust zoom level as necessary
                    }
                })
                .catch(error => console.error('Error fetching search results:', error));
        });
    </script>
</body>
</html>
