@{
    ViewData["Title"] = "Search";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Search Businesses</title>
    <style>
        .search-location-marker {
            background: none;
        }

        .search-marker-inner {
            width: 20px;
            height: 20px;
            background-color: #0066cc;
            border: 3px solid white;
            border-radius: 50%;
            box-shadow: 0 0 0 2px #0066cc;
        }

        .popup-content {
            min-width: 200px;
            padding: 10px;
        }

        .business-card {
            cursor: pointer;
            transition: transform 0.2s;
        }

            .business-card:hover {
                transform: translateY(-2px);
                box-shadow: 0 4px 8px rgba(0,0,0,0.1);
            }

        .container {
            display: flex;
            width: 100%;
        }

        .sidebar {
            width: 30%;
            padding: 10px;
            border-right: 1px solid #ccc;
            max-height: 500px;
            overflow-y: auto;
            background-color: #f1f1f1;
        }

        .map {
            width: 70%;
            padding: 10px;
            position: relative;
            height: 400px; /* Explicitly set height */
        }

        .business-card img {
            width: 100px;
            height: 500px;
            object-fit: cover;
        }

        #map {
            width: 100%;
            height: 100%; /* Make map fill the container */
            border: 1px solid #ccc;
            border-radius: 5px;
        }
    </style>
    <link rel="stylesheet" href="https://unpkg.com/leaflet/dist/leaflet.css" />
    <link rel="stylesheet" href="https://unpkg.com/leaflet.markercluster@1.4.1/dist/MarkerCluster.css" />
    <link rel="stylesheet" href="https://unpkg.com/leaflet.markercluster@1.4.1/dist/MarkerCluster.Default.css" />
    <script src="https://unpkg.com/leaflet/dist/leaflet.js"></script> <!-- Load Leaflet first -->
    <script src="https://unpkg.com/leaflet.markercluster@1.4.1/dist/leaflet.markercluster.js"></script> <!-- Load MarkerCluster after Leaflet -->

</head>
<body>
    <div class="header">
        <div class="search-bar">
            <h1>EmpowerU</h1>
            <input type="text" id="searchInput" placeholder="Enter business or location">
        </div>
    </div>

    <div class="container">
        <div class="sidebar">
            <h6>Search results: Businesses in <span id="locationLabel">[Specified location]</span></h6>

            @foreach (var business in Model)
            {
                <div class="business-card" onclick="viewBusinessDetails(@business.Id)">
                    <img src="data:image/png;base64,@(Convert.ToBase64String(business.ProfilePicture ?? new byte[0]))" alt="Logo">
                    <div class="business-details">
                        <h5>@business.Name</h5>
                        <p>@business.Description</p>
                        <p>Category: @business.BusinessCategory</p>
                        <p>Rating: @business.Rating</p>
                    </div>
                </div>
            }
        </div>

        <div class="map">
            <div id="map"></div>
        </div>
    </div>

    <script src="https://unpkg.com/leaflet/dist/leaflet.js"></script>
    <script>
        const urlParams = new URLSearchParams(window.location.search);
        const centerLat = parseFloat(urlParams.get('lat')) || 0;
        const centerLon = parseFloat(urlParams.get('lon')) || 0;
        const address = urlParams.get('address') || '[Location not specified]';

        document.getElementById("locationLabel").textContent = decodeURIComponent(address);

        const map = L.map('map').setView([centerLat, centerLon], 13);

        L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
            maxZoom: 19,
            attribution: '© OpenStreetMap contributors'
        }).addTo(map);

        const markers = L.markerClusterGroup();
        const searchMarker = L.marker([centerLat, centerLon], {
            icon: L.divIcon({
                className: 'search-location-marker',
                html: '<div class="search-marker-inner"></div>',
                iconSize: [20, 20]
            })
        }).addTo(map);

        // Function to add business markers using LocationService coordinates
        function addBusinessMarker(business) {
            const latitude = business.LocationService?.Latitude;
            const longitude = business.LocationService?.Longitude;

            if (latitude && longitude) {
                const marker = L.marker([latitude, longitude])
                    .bindPopup(`
                                <div class="popup-content">
                                    <h5>${business.Name}</h5>
                                    <p>${business.Description}</p>
                                    <p>Category: ${business.BusinessCategory}</p>
                                    <p>Rating: ${business.Rating}</p>
                                    <button onclick="viewBusinessDetails(${business.Id})" class="btn btn-sm btn-primary mt-2">
                                        View Details
                                    </button>
                                </div>
                            `);
                markers.addLayer(marker);
            }
        }

        // Handle business details view
        function viewBusinessDetails(businessId) {
            window.location.href = `/Businesses/Details/${businessId}`;
        }

        // Add business markers from initial data
        const businesses = @Html.Raw(Json.Serialize(Model));
        businesses.forEach(business => {
            addBusinessMarker(business);
        });

        // Add marker cluster to map
        map.addLayer(markers);

        // Fit map bounds to show all markers
        if (markers.getLayers().length > 0) {
            const bounds = markers.getBounds();
            map.fitBounds(bounds);
        }
    </script>
</body>
</html>
